<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 配置spring的ioc把service对象配置进来-->
    <bean id="accountService" class="com.itheima.service.impl.AccountServiceImpl"></bean>


    <!--配置logger类-->
    <bean id="logger" class="com.itheima.utils.Logger"></bean>

    <!--配置aop-->
    <aop:config>
        <!--配置切面-->
        <aop:aspect id="logAdvice" ref="logger">
            <!--配置前置通知：在切入点方法执行之前执行-->
            <aop:before method="beforePrintLog" pointcut="execution( void com.itheima.service.impl.*.*(..))"></aop:before>

            <!--配置后置通知：在切入点方法正常执行之后执行，他和异常通知永远只能执行一个-->
            <aop:after-returning method="afterreturning" pointcut="execution( void com.itheima.service.impl.*.*(..))"></aop:after-returning>

            <!--配置异常通知：在切入点方法执行产生异常之后执行-->
            <aop:after-throwing method="afterThrowingPrintLog" pointcut="execution( void com.itheima.service.impl.*.*(..))"></aop:after-throwing>

            <!--配置最终通知：无论切入点方法是否正常执行，它都会在其后执行-->
            <aop:after method="afterPrintLog" pointcut="execution( void com.itheima.service.impl.*.*(..))"></aop:after>
        </aop:aspect>
    </aop:config>
</beans>